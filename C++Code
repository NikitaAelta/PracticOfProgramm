#include <iostream>
#include <vector>
#include <algorithm>

int minBrokenFloor(int n) {
    // Инициализация двумерного массива для хранения результатов
    std::vector<std::vector<int>> dp(n + 1, std::vector<int>(n + 1, 0));
    
    // Заполнение базовых случаев
    for (int i = 1; i <= n; ++i) {
        dp[i][1] = i; // Только один шарик
        dp[1][i] = 1; // Только один этаж
    }
    
    // Заполнение остальных значений
    for (int i = 2; i <= n; ++i) {
        for (int j = 2; j <= n; ++j) {
            dp[i][j] = INT_MAX;
            for (int x = 1; x <= i; ++x) {
                dp[i][j] = std::min(dp[i][j], 1 + std::max(dp[x - 1][j - 1], dp[i - x][j]));
            }
        }
    }
    
    return dp[n][n];
}

int main() {
    int n;
    std::cin >> n;
    
    std::cout << minBrokenFloor(n) << std::endl;
    
    return 0;
}
